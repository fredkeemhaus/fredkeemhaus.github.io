{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/PintOS",
    "result": {"pageContext":{"currentCategory":"PintOS","categories":["All","운영체제","PintOS","블로그","featured"],"edges":[{"node":{"id":"a5d9ef7f-ed4b-58ff-acec-28d8e696c487","excerpt":"첫번 째 과제 수행(Alarm System Call)을 수행하기 위해 알아야할 Thread에 대해 알아보자. 👉 프로세스의 문제점 프로그램이 메모리에 로딩되어 실행 중인 상태인 프로세스(Process)를 기반으로 하는 멀티태스킹은 여러 프로세스를 동시에 실행시킴으로써 **CPU(Central Processing Unit)**의 활용률과 시스템의 처리율을 높였다. 그 결과 다양한 멀티태스킹 어플리케이션이 등장하게 되었지만 다음과 같은 여러 문제점들이 제기되었다. 프로세스 생성에 따른 큰 오버헤드 프로세스마다 독립적인 메모리 공간을 갖기 때문에 자식 프로세스에게 부모 프로세스와는 별도로 메모리를 할당할 공간에 부모 프로세스를 복사하게되어 프로세스 생성에 많은 시간이 소요된다. 운영체제도 새로 생성되는 프로세스를 위해 PCB(Process Control Block), 페이지 테이블 등 프로세스 관리를 위한 구조체를 생성하는 데 많은 시간이 걸린다. 비효율적인 프로세스 컨텍스트 스위칭 C…","fields":{"slug":"/2021-12-28/"},"frontmatter":{"categories":"운영체제 PintOS","title":"PintOS - Thread","date":"December 28, 2021"}},"next":{"fields":{"slug":"/2021-11-02/"}},"previous":null}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}